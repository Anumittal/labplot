LabPlot 2.0
-----------

complete rewrite of LabPlot 1.X.
ported to Qt/KDE 4.

Compiling :

# ./build
# make install

Clean-up:
# ./clean

#############
TableView/Model vs. TableWidget:

import data :
data		time TV	memory TV	time TW	memory TW
3x99731	ASCII	4s	17m		7s	41m
2x10^6	ASCII	27s	90m		50s	262m
2x10^6 binary	23s	114m		45s	285m

###############

In Sep. 2008, the LabPlot project and the SciDAVis project (scidavis.sourceforge.net) started a close collaboration. 
The plan is to share a common backend with two frontends: KDE based (LabPlot) and Qt-only (SciDAVis).

###############

Building the Qt frontend:
# cd src/qtfrontend
# qmake-qt4 scidavis.pro
# make
# make install (optional, not needed for most development tasks)

If the Qt frontend is build any other way, make sure that ACTIVATE_SCIDAVIS_SPECIFIC_CODE is defined in the Makefile.

###############

I would be better for Spreadsheet not depend on MainWin at all.
But if you really need it, this is the "SciDAVis way" of getting a pointer to the main window: - Tilman

if (m_table->project() == NULL) return;
MainWin * mw = static_cast<MainWin *>(m_table->project()->view());

################

Remarks about the Labplot/SciDAVis integration of class Project:
- save/open: the stream based XML reading and writing is faster than using DOM.
  If you want, you can of course use DOM instead. - Tilman
- QString m_filename: now d->file_name
- int m_version: now d->version
- QString m_labPlot: now d->labPlot
- QString m_title: use AbstractAspect::name()
- QString m_author: now d->author
- QDateTime m_created: use AbstractAspect::creationTime()
- QDateTime m_modified: now d->modification_time
- QString m_notes: use AbstractAspect::comment()
- bool m_changed: now d->changed

###############

SciDAVis introduces an abstraction of the application design called "aspect framework" or "5 layer model". 
Very short description:
Every object (aspect) in a project is placed in a hierarchy with the project as the root node. Every aspect
itself has 5 layers of functionality: 
layer 0: data
layer 1: undo commands
layer 2: public API
layer 3: Qt models
lyeer 4: GUI (including Qt views), scripting
Long description: see src/qtfrontend/doc/aspect-framework.dox 
(or generate Doxygen docs by "doxygen Doxyfile" in the qtfrontend dir)

####################

