TODO file of LabPlot:
***********************
##############################################################################################################
* Translations :
	en/de	: Stefan Gerlach			English/Deutsch			English/German
	fr	: Pascal Pirotte			Fran&ccedil;ais			French
	sv	: Peter Landgren			Svenska				Swedisch
	it	: Gabriele Modena, Davide Setti		Italiano			Italian
	pl	: Monika Olasek				Polski				Polish
	br	: Narcizo Marques			Portugu&ecirc;s-Brasileiro	Portuguese-Brazilian
	es	: José Antonio Lorenzo Fernandez	EspaÃ±ol			Spanish
	nl	: Rinse de Vries			Nederlands			Dutch
	lt	: Andrius ¦tikonas			Lietuvi				Lithuanian
	zh	: Roy Hu								Traditional Chinese
	ru	: <unmaintained>
##############################################################################################################
RELEASE :
	* update LabPlot.spec, build-LabPlot.sh, BUGFIXES
	* README/FEATURES/CHANGES
	* po/ Update
	* doxygen	->	doc/html/
	* doc/en/index.docbook	(Handbook)
-------------------------------------------------------------------------------------
##############################################################################################################
LabPlot 2.0.0:	(see also WISHLIST)
*************
BUGS:
	V Application crashes when main window is closed (X)
	V Application crashes when saving project
	V Import dialog : not resized if options hidden
	V CRASH : using spreadsheet-> edit function
	Import dialog : compressed data shows no progress
	Spreadsheet : column selection doesn't work when CTRL is pressed (extended selection)
	? message boxes sometimes hang the application

TODO :
******
-------------------------------------------------------------------------
General :
	*use the "usual" c++ naming convention:
	http://techbase.kde.org/index.php?title=Policies/Library_Code_Policy
	"Class names starts with a capital K. The rest is in camel case.
	Function names starts with a lower case, but the first letter of each successive word is capitalized."
	* check functions.h, constants.h
		* use GSL
		* GSL_VERSION
-------------------------------------------------------------------------
Ideas :
	* use cmake to build either kdefrontend or
		qtfrontend, something like "-with-qt" / "-with-kde" 
	* put ProjectExplorer and PartMdiView in common frontend dir
		( if there is no KDE version)
	* Our approach also is to put as much code as possible into the aspect 
		(or its view) that it is related to rather than the
		main window. So we prefer (in pseudo code, just to show the principle)
		activeWindow().aspect().showMeYourContextMenu(Position)
		over
		if (activeWindowType() == spreadsheet) openSpreadSheetContextMenu(Position)

-------------------------------------------------------------------------
Pending :
	* Worksheet-Aspect	Alexander
	* Print 
		Worksheet::setupPrinter();
	* dialogs
		* LabelWidget: title dialog, function dialog, axes dialog
		* SettingsDialog		Alexander
		* AxesDialog			Alexander
		* LegendDialog		Alexander
		* PlotDialog			Alexander
		* WorksheetDialog	Alexander
		* dataset dialog		Alexander
		* title dialog : saveSettings	Alexander
		* FunctionDialog		Alexander
			style/symbol
			update sheetcb after apply
			other plot types
			save/load settings
		* ExportDialog		Stefan
			ascii, binary, hdf5, magick, cdf, (audio, database)
		* Import Dialog		Stefan
			* import data into table
			* warn if selected file doesn't exist when apply
			Options
				same first column
			Formats
				advanced opj (matrices, etc.)
				magick (images)
				audio
				database (kexi ?)
				more formas (file type selection)
			file info dialog
		* ColumnValuesDialog
		* SpreadsheetPlotDialog
	* port RichTextWidget and use it	Alexander
	* figure out how to use KDE4-widgets (e.g. KFontChooser) in designer	Alexander
-------------------------------------------------------------------------
more things :
=============
	Worksheet
		draw other symbols
		draw other styles
	Spreadsheet 
		new column on click (empty header)
		column dialog on double click
		mask data (TableModel ?)
		menu
		...
	Plots
		save/open
		surface
		qwt plot
		3d ?
	MainWin
		Print Preview (see Qt textedit demo)
		Export to eps, svg, ...
		dynamic menus (sheets + data sets)
	View: autoscale, zoom, etc.
	analysis functions
	Scripting (Workbench ?)
	add Doxygen style documentations
	...
		
##############################################################################################################
